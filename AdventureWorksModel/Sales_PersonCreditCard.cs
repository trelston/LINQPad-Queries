// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // PersonCreditCard
    ///<summary>
    /// Cross-reference table mapping people to their credit card information in the CreditCard table.
    ///</summary>
    [Table("PersonCreditCard", Schema = "Sales")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Sales_PersonCreditCard
    {

        ///<summary>
        /// Business entity identification number. Foreign key to Person.BusinessEntityID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"BusinessEntityID", Order = 1, TypeName = "int")]
        [Index(@"PK_PersonCreditCard_BusinessEntityID_CreditCardID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Business entity ID")]
        public int BusinessEntityId { get; set; } // BusinessEntityID (Primary key)

        ///<summary>
        /// Credit card identification number. Foreign key to CreditCard.CreditCardID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CreditCardID", Order = 2, TypeName = "int")]
        [Index(@"PK_PersonCreditCard_BusinessEntityID_CreditCardID", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Credit card ID")]
        public int CreditCardId { get; set; } // CreditCardID (Primary key)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Person_Person pointed by [PersonCreditCard].([BusinessEntityId]) (FK_PersonCreditCard_Person_BusinessEntityID)
        /// </summary>
        [ForeignKey("BusinessEntityId"), Required] public virtual Person_Person Person_Person { get; set; } // FK_PersonCreditCard_Person_BusinessEntityID

        /// <summary>
        /// Parent Sales_CreditCard pointed by [PersonCreditCard].([CreditCardId]) (FK_PersonCreditCard_CreditCard_CreditCardID)
        /// </summary>
        [ForeignKey("CreditCardId"), Required] public virtual Sales_CreditCard Sales_CreditCard { get; set; } // FK_PersonCreditCard_CreditCard_CreditCardID

        public Sales_PersonCreditCard()
        {
            ModifiedDate = System.DateTime.Now;
        }
    }

}
// </auto-generated>
