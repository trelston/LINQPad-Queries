// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // Location
    ///<summary>
    /// Product inventory and manufacturing locations.
    ///</summary>
    [Table("Location", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Production_Location
    {

        ///<summary>
        /// Primary key for Location records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"LocationID", Order = 1, TypeName = "smallint")]
        [Index(@"PK_Location_LocationID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Location ID")]
        public short LocationId { get; set; } // LocationID (Primary key)

        ///<summary>
        /// Location description.
        ///</summary>
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_Location_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// Standard hourly cost of the manufacturing location.
        ///</summary>
        [Column(@"CostRate", Order = 3, TypeName = "smallmoney")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Cost rate")]
        public decimal CostRate { get; set; } // CostRate

        ///<summary>
        /// Work capacity (in hours) of the manufacturing location.
        ///</summary>
        [Column(@"Availability", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Availability")]
        public decimal Availability { get; set; } // Availability

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_ProductInventories where [ProductInventory].[LocationID] point to this entity (FK_ProductInventory_Location_LocationID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductInventory> Production_ProductInventories { get; set; } // ProductInventory.FK_ProductInventory_Location_LocationID
        /// <summary>
        /// Child Production_WorkOrderRoutings where [WorkOrderRouting].[LocationID] point to this entity (FK_WorkOrderRouting_Location_LocationID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_WorkOrderRouting> Production_WorkOrderRoutings { get; set; } // WorkOrderRouting.FK_WorkOrderRouting_Location_LocationID

        public Production_Location()
        {
            CostRate = 0.00m;
            Availability = 0.00m;
            ModifiedDate = System.DateTime.Now;
            Production_ProductInventories = new System.Collections.Generic.List<Production_ProductInventory>();
            Production_WorkOrderRoutings = new System.Collections.Generic.List<Production_WorkOrderRouting>();
        }
    }

}
// </auto-generated>
