// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // PurchaseOrderDetail
    ///<summary>
    /// Individual products associated with a specific purchase order. See PurchaseOrderHeader.
    ///</summary>
    [Table("PurchaseOrderDetail", Schema = "Purchasing")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Purchasing_PurchaseOrderDetail
    {

        ///<summary>
        /// Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PurchaseOrderID", Order = 1, TypeName = "int")]
        [Index(@"PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Purchase order ID")]
        public int PurchaseOrderId { get; set; } // PurchaseOrderID (Primary key)

        ///<summary>
        /// Primary key. One line number per purchased product.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"PurchaseOrderDetailID", Order = 2, TypeName = "int")]
        [Index(@"PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Purchase order detail ID")]
        public int PurchaseOrderDetailId { get; set; } // PurchaseOrderDetailID (Primary key)

        ///<summary>
        /// Date the product is expected to be received.
        ///</summary>
        [Column(@"DueDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Due date")]
        public System.DateTime DueDate { get; set; } // DueDate

        ///<summary>
        /// Quantity ordered.
        ///</summary>
        [Column(@"OrderQty", Order = 4, TypeName = "smallint")]
        [Required]
        [Display(Name = "Order qty")]
        public short OrderQty { get; set; } // OrderQty

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [Column(@"ProductID", Order = 5, TypeName = "int")]
        [Index(@"IX_PurchaseOrderDetail_ProductID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID

        ///<summary>
        /// Vendor&apos;s selling price of a single product.
        ///</summary>
        [Column(@"UnitPrice", Order = 6, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Unit price")]
        public decimal UnitPrice { get; set; } // UnitPrice

        ///<summary>
        /// Per product subtotal. Computed as OrderQty * UnitPrice.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        [Column(@"LineTotal", Order = 7, TypeName = "money")]
        [DataType(DataType.Currency)]
        [Display(Name = "Line total")]
        public decimal LineTotal { get; private set; } // LineTotal

        ///<summary>
        /// Quantity actually received from the vendor.
        ///</summary>
        [Column(@"ReceivedQty", Order = 8, TypeName = "decimal")]
        [Required]
        [Display(Name = "Received qty")]
        public decimal ReceivedQty { get; set; } // ReceivedQty

        ///<summary>
        /// Quantity rejected during inspection.
        ///</summary>
        [Column(@"RejectedQty", Order = 9, TypeName = "decimal")]
        [Required]
        [Display(Name = "Rejected qty")]
        public decimal RejectedQty { get; set; } // RejectedQty

        ///<summary>
        /// Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        [Column(@"StockedQty", Order = 10, TypeName = "decimal")]
        [Display(Name = "Stocked qty")]
        public decimal StockedQty { get; private set; } // StockedQty

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 11, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Product pointed by [PurchaseOrderDetail].([ProductId]) (FK_PurchaseOrderDetail_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_Product Production_Product { get; set; } // FK_PurchaseOrderDetail_Product_ProductID

        /// <summary>
        /// Parent Purchasing_PurchaseOrderHeader pointed by [PurchaseOrderDetail].([PurchaseOrderId]) (FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID)
        /// </summary>
        [ForeignKey("PurchaseOrderId"), Required] public virtual Purchasing_PurchaseOrderHeader Purchasing_PurchaseOrderHeader { get; set; } // FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID

        public Purchasing_PurchaseOrderDetail()
        {
            ModifiedDate = System.DateTime.Now;
        }
    }

}
// </auto-generated>
