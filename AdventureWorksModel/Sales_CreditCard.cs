// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // CreditCard
    ///<summary>
    /// Customer credit card information.
    ///</summary>
    [Table("CreditCard", Schema = "Sales")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Sales_CreditCard
    {

        ///<summary>
        /// Primary key for CreditCard records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"CreditCardID", Order = 1, TypeName = "int")]
        [Index(@"PK_CreditCard_CreditCardID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Credit card ID")]
        public int CreditCardId { get; set; } // CreditCardID (Primary key)

        ///<summary>
        /// Credit card name.
        ///</summary>
        [Column(@"CardType", Order = 2, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Card type")]
        public string CardType { get; set; } // CardType (length: 50)

        ///<summary>
        /// Credit card number.
        ///</summary>
        [Column(@"CardNumber", Order = 3, TypeName = "nvarchar")]
        [Index(@"AK_CreditCard_CardNumber", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Card number")]
        public string CardNumber { get; set; } // CardNumber (length: 25)

        ///<summary>
        /// Credit card expiration month.
        ///</summary>
        [Column(@"ExpMonth", Order = 4, TypeName = "tinyint")]
        [Required]
        [Display(Name = "Exp month")]
        public byte ExpMonth { get; set; } // ExpMonth

        ///<summary>
        /// Credit card expiration year.
        ///</summary>
        [Column(@"ExpYear", Order = 5, TypeName = "smallint")]
        [Required]
        [Display(Name = "Exp year")]
        public short ExpYear { get; set; } // ExpYear

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 6, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Sales_PersonCreditCards where [PersonCreditCard].[CreditCardID] point to this entity (FK_PersonCreditCard_CreditCard_CreditCardID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Sales_PersonCreditCard> Sales_PersonCreditCards { get; set; } // PersonCreditCard.FK_PersonCreditCard_CreditCard_CreditCardID
        /// <summary>
        /// Child Sales_SalesOrderHeaders where [SalesOrderHeader].[CreditCardID] point to this entity (FK_SalesOrderHeader_CreditCard_CreditCardID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Sales_SalesOrderHeader> Sales_SalesOrderHeaders { get; set; } // SalesOrderHeader.FK_SalesOrderHeader_CreditCard_CreditCardID

        public Sales_CreditCard()
        {
            ModifiedDate = System.DateTime.Now;
            Sales_PersonCreditCards = new System.Collections.Generic.List<Sales_PersonCreditCard>();
            Sales_SalesOrderHeaders = new System.Collections.Generic.List<Sales_SalesOrderHeader>();
        }
    }

}
// </auto-generated>
