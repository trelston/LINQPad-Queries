// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // EmployeeDepartmentHistory
    ///<summary>
    /// Employee department transfers.
    ///</summary>
    [Table("EmployeeDepartmentHistory", Schema = "HumanResources")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class HumanResources_EmployeeDepartmentHistory
    {

        ///<summary>
        /// Employee identification number. Foreign key to Employee.BusinessEntityID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"BusinessEntityID", Order = 1, TypeName = "int")]
        [Index(@"PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Business entity ID")]
        public int BusinessEntityId { get; set; } // BusinessEntityID (Primary key)

        ///<summary>
        /// Department in which the employee worked including currently. Foreign key to Department.DepartmentID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DepartmentID", Order = 2, TypeName = "smallint")]
        [Index(@"IX_EmployeeDepartmentHistory_DepartmentID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID", 3, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Department ID")]
        public short DepartmentId { get; set; } // DepartmentID (Primary key)

        ///<summary>
        /// Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ShiftID", Order = 3, TypeName = "tinyint")]
        [Index(@"IX_EmployeeDepartmentHistory_ShiftID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID", 4, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Shift ID")]
        public byte ShiftId { get; set; } // ShiftID (Primary key)

        ///<summary>
        /// Date the employee started work in the department.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"StartDate", Order = 4, TypeName = "date")]
        [Index(@"PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [DataType(DataType.Date)]
        [Display(Name = "Start date")]
        public System.DateTime StartDate { get; set; } // StartDate (Primary key)

        ///<summary>
        /// Date the employee left the department. NULL = Current department.
        ///</summary>
        [Column(@"EndDate", Order = 5, TypeName = "date")]
        [DataType(DataType.Date)]
        [Display(Name = "End date")]
        public System.DateTime? EndDate { get; set; } // EndDate

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 6, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent HumanResources_Employee pointed by [EmployeeDepartmentHistory].([BusinessEntityId]) (FK_EmployeeDepartmentHistory_Employee_BusinessEntityID)
        /// </summary>
        [ForeignKey("BusinessEntityId"), Required] public virtual HumanResources_Employee HumanResources_Employee { get; set; } // FK_EmployeeDepartmentHistory_Employee_BusinessEntityID

        /// <summary>
        /// Parent HumanResources_Department pointed by [EmployeeDepartmentHistory].([DepartmentId]) (FK_EmployeeDepartmentHistory_Department_DepartmentID)
        /// </summary>
        [ForeignKey("DepartmentId"), Required] public virtual HumanResources_Department HumanResources_Department { get; set; } // FK_EmployeeDepartmentHistory_Department_DepartmentID

        /// <summary>
        /// Parent HumanResources_Shift pointed by [EmployeeDepartmentHistory].([ShiftId]) (FK_EmployeeDepartmentHistory_Shift_ShiftID)
        /// </summary>
        [ForeignKey("ShiftId"), Required] public virtual HumanResources_Shift HumanResources_Shift { get; set; } // FK_EmployeeDepartmentHistory_Shift_ShiftID

        public HumanResources_EmployeeDepartmentHistory()
        {
            ModifiedDate = System.DateTime.Now;
        }
    }

}
// </auto-generated>
