// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // SalesOrderDetail
    ///<summary>
    /// Individual products associated with a specific sales order. See SalesOrderHeader.
    ///</summary>
    [Table("SalesOrderDetail", Schema = "Sales")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Sales_SalesOrderDetail
    {

        ///<summary>
        /// Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"SalesOrderID", Order = 1, TypeName = "int")]
        [Index(@"PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Sales order ID")]
        public int SalesOrderId { get; set; } // SalesOrderID (Primary key)

        ///<summary>
        /// Primary key. One incremental unique number per product sold.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SalesOrderDetailID", Order = 2, TypeName = "int")]
        [Index(@"PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Sales order detail ID")]
        public int SalesOrderDetailId { get; set; } // SalesOrderDetailID (Primary key)

        ///<summary>
        /// Shipment tracking number supplied by the shipper.
        ///</summary>
        [Column(@"CarrierTrackingNumber", Order = 3, TypeName = "nvarchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Carrier tracking number")]
        public string CarrierTrackingNumber { get; set; } // CarrierTrackingNumber (length: 25)

        ///<summary>
        /// Quantity ordered per product.
        ///</summary>
        [Column(@"OrderQty", Order = 4, TypeName = "smallint")]
        [Required]
        [Display(Name = "Order qty")]
        public short OrderQty { get; set; } // OrderQty

        ///<summary>
        /// Product sold to customer. Foreign key to Product.ProductID.
        ///</summary>
        [Column(@"ProductID", Order = 5, TypeName = "int")]
        [Index(@"IX_SalesOrderDetail_ProductID", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID

        ///<summary>
        /// Promotional code. Foreign key to SpecialOffer.SpecialOfferID.
        ///</summary>
        [Column(@"SpecialOfferID", Order = 6, TypeName = "int")]
        [Required]
        [Display(Name = "Special offer ID")]
        public int SpecialOfferId { get; set; } // SpecialOfferID

        ///<summary>
        /// Selling price of a single product.
        ///</summary>
        [Column(@"UnitPrice", Order = 7, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Unit price")]
        public decimal UnitPrice { get; set; } // UnitPrice

        ///<summary>
        /// Discount amount.
        ///</summary>
        [Column(@"UnitPriceDiscount", Order = 8, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Unit price discount")]
        public decimal UnitPriceDiscount { get; set; } // UnitPriceDiscount

        ///<summary>
        /// Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        [Column(@"LineTotal", Order = 9, TypeName = "numeric")]
        [Display(Name = "Line total")]
        public decimal LineTotal { get; private set; } // LineTotal

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 10, TypeName = "uniqueidentifier")]
        [Index(@"AK_SalesOrderDetail_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 11, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Sales_SalesOrderHeader pointed by [SalesOrderDetail].([SalesOrderId]) (FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID)
        /// </summary>
        [ForeignKey("SalesOrderId"), Required] public virtual Sales_SalesOrderHeader Sales_SalesOrderHeader { get; set; } // FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID

        /// <summary>
        /// Parent Sales_SpecialOfferProduct pointed by [SalesOrderDetail].([SpecialOfferId], [ProductId]) (FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID)
        /// </summary>
        [ForeignKey("SpecialOfferId, ProductId"), Required] public virtual Sales_SpecialOfferProduct Sales_SpecialOfferProduct { get; set; } // FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID

        public Sales_SalesOrderDetail()
        {
            UnitPriceDiscount = 0.0m;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
        }
    }

}
// </auto-generated>
