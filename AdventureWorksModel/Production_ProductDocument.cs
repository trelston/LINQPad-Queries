// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // ProductDocument
    ///<summary>
    /// Cross-reference table mapping products to related product documents.
    ///</summary>
    [Table("ProductDocument", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Production_ProductDocument
    {

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductDocument_ProductID_DocumentNode", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        ///<summary>
        /// Document identification number. Foreign key to Document.DocumentNode.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"DocumentNode", Order = 2, TypeName = "hierarchyid")]
        [Index(@"PK_ProductDocument_ProductID_DocumentNode", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Document node")]
        public System.Data.Entity.Hierarchy.HierarchyId DocumentNode { get; set; } // DocumentNode (Primary key)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent Production_Document pointed by [ProductDocument].([DocumentNode]) (FK_ProductDocument_Document_DocumentNode)
        /// </summary>
        [ForeignKey("DocumentNode"), Required] public virtual Production_Document Production_Document { get; set; } // FK_ProductDocument_Document_DocumentNode

        /// <summary>
        /// Parent Production_Product pointed by [ProductDocument].([ProductId]) (FK_ProductDocument_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_Product Production_Product { get; set; } // FK_ProductDocument_Product_ProductID

        public Production_ProductDocument()
        {
            ModifiedDate = System.DateTime.Now;
        }
    }

}
// </auto-generated>
