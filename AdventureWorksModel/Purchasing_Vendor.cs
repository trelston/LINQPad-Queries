// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // Vendor
    ///<summary>
    /// Companies from whom Adventure Works Cycles purchases parts or other goods.
    ///</summary>
    [Table("Vendor", Schema = "Purchasing")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Purchasing_Vendor
    {

        ///<summary>
        /// Primary key for Vendor records.  Foreign key to BusinessEntity.BusinessEntityID
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"BusinessEntityID", Order = 1, TypeName = "int")]
        [Index(@"PK_Vendor_BusinessEntityID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Business entity ID")]
        [ForeignKey("Person_BusinessEntity")]
        public int BusinessEntityId { get; set; } // BusinessEntityID (Primary key)

        ///<summary>
        /// Vendor account (identification) number.
        ///</summary>
        [Column(@"AccountNumber", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_Vendor_AccountNumber", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Account number")]
        public string AccountNumber { get; set; } // AccountNumber (length: 15)

        ///<summary>
        /// Company name.
        ///</summary>
        [Column(@"Name", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// 1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average
        ///</summary>
        [Column(@"CreditRating", Order = 4, TypeName = "tinyint")]
        [Required]
        [Display(Name = "Credit rating")]
        public byte CreditRating { get; set; } // CreditRating

        ///<summary>
        /// 0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.
        ///</summary>
        [Column(@"PreferredVendorStatus", Order = 5, TypeName = "bit")]
        [Required]
        [Display(Name = "Preferred vendor status")]
        public bool PreferredVendorStatus { get; set; } // PreferredVendorStatus

        ///<summary>
        /// 0 = Vendor no longer used. 1 = Vendor is actively used.
        ///</summary>
        [Column(@"ActiveFlag", Order = 6, TypeName = "bit")]
        [Required]
        [Display(Name = "Active flag")]
        public bool ActiveFlag { get; set; } // ActiveFlag

        ///<summary>
        /// Vendor URL.
        ///</summary>
        [Column(@"PurchasingWebServiceURL", Order = 7, TypeName = "nvarchar")]
        [MaxLength(1024)]
        [StringLength(1024)]
        [Display(Name = "Purchasing web service url")]
        public string PurchasingWebServiceUrl { get; set; } // PurchasingWebServiceURL (length: 1024)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 8, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Purchasing_ProductVendors where [ProductVendor].[BusinessEntityID] point to this entity (FK_ProductVendor_Vendor_BusinessEntityID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Purchasing_ProductVendor> Purchasing_ProductVendors { get; set; } // ProductVendor.FK_ProductVendor_Vendor_BusinessEntityID
        /// <summary>
        /// Child Purchasing_PurchaseOrderHeaders where [PurchaseOrderHeader].[VendorID] point to this entity (FK_PurchaseOrderHeader_Vendor_VendorID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Purchasing_PurchaseOrderHeader> Purchasing_PurchaseOrderHeaders { get; set; } // PurchaseOrderHeader.FK_PurchaseOrderHeader_Vendor_VendorID

        // Foreign keys

        /// <summary>
        /// Parent Person_BusinessEntity pointed by [Vendor].([BusinessEntityId]) (FK_Vendor_BusinessEntity_BusinessEntityID)
        /// </summary>
        [ForeignKey("BusinessEntityId"), Required] public virtual Person_BusinessEntity Person_BusinessEntity { get; set; } // FK_Vendor_BusinessEntity_BusinessEntityID

        public Purchasing_Vendor()
        {
            PreferredVendorStatus = true;
            ActiveFlag = true;
            ModifiedDate = System.DateTime.Now;
            Purchasing_ProductVendors = new System.Collections.Generic.List<Purchasing_ProductVendor>();
            Purchasing_PurchaseOrderHeaders = new System.Collections.Generic.List<Purchasing_PurchaseOrderHeader>();
        }
    }

}
// </auto-generated>
