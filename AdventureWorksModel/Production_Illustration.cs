// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // Illustration
    ///<summary>
    /// Bicycle assembly diagrams.
    ///</summary>
    [Table("Illustration", Schema = "Production")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Production_Illustration
    {

        ///<summary>
        /// Primary key for Illustration records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"IllustrationID", Order = 1, TypeName = "int")]
        [Index(@"PK_Illustration_IllustrationID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Illustration ID")]
        public int IllustrationId { get; set; } // IllustrationID (Primary key)

        ///<summary>
        /// Illustrations used in manufacturing instructions. Stored as XML.
        ///</summary>
        [Column(@"Diagram", Order = 2, TypeName = "xml")]
        [Display(Name = "Diagram")]
        public string Diagram { get; set; } // Diagram

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 3, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Production_ProductModelIllustrations where [ProductModelIllustration].[IllustrationID] point to this entity (FK_ProductModelIllustration_Illustration_IllustrationID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Production_ProductModelIllustration> Production_ProductModelIllustrations { get; set; } // ProductModelIllustration.FK_ProductModelIllustration_Illustration_IllustrationID

        public Production_Illustration()
        {
            ModifiedDate = System.DateTime.Now;
            Production_ProductModelIllustrations = new System.Collections.Generic.List<Production_ProductModelIllustration>();
        }
    }

}
// </auto-generated>
