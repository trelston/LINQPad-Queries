// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // ShipMethod
    ///<summary>
    /// Shipping company lookup table.
    ///</summary>
    [Table("ShipMethod", Schema = "Purchasing")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Purchasing_ShipMethod
    {

        ///<summary>
        /// Primary key for ShipMethod records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ShipMethodID", Order = 1, TypeName = "int")]
        [Index(@"PK_ShipMethod_ShipMethodID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Ship method ID")]
        public int ShipMethodId { get; set; } // ShipMethodID (Primary key)

        ///<summary>
        /// Shipping company name.
        ///</summary>
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_ShipMethod_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// Minimum shipping charge.
        ///</summary>
        [Column(@"ShipBase", Order = 3, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Ship base")]
        public decimal ShipBase { get; set; } // ShipBase

        ///<summary>
        /// Shipping charge per pound.
        ///</summary>
        [Column(@"ShipRate", Order = 4, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Ship rate")]
        public decimal ShipRate { get; set; } // ShipRate

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 5, TypeName = "uniqueidentifier")]
        [Index(@"AK_ShipMethod_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 6, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Purchasing_PurchaseOrderHeaders where [PurchaseOrderHeader].[ShipMethodID] point to this entity (FK_PurchaseOrderHeader_ShipMethod_ShipMethodID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Purchasing_PurchaseOrderHeader> Purchasing_PurchaseOrderHeaders { get; set; } // PurchaseOrderHeader.FK_PurchaseOrderHeader_ShipMethod_ShipMethodID
        /// <summary>
        /// Child Sales_SalesOrderHeaders where [SalesOrderHeader].[ShipMethodID] point to this entity (FK_SalesOrderHeader_ShipMethod_ShipMethodID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Sales_SalesOrderHeader> Sales_SalesOrderHeaders { get; set; } // SalesOrderHeader.FK_SalesOrderHeader_ShipMethod_ShipMethodID

        public Purchasing_ShipMethod()
        {
            ShipBase = 0.00m;
            ShipRate = 0.00m;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Purchasing_PurchaseOrderHeaders = new System.Collections.Generic.List<Purchasing_PurchaseOrderHeader>();
            Sales_SalesOrderHeaders = new System.Collections.Generic.List<Sales_SalesOrderHeader>();
        }
    }

}
// </auto-generated>
