// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // SpecialOfferProduct
    ///<summary>
    /// Cross-reference table mapping products to special offer discounts.
    ///</summary>
    [Table("SpecialOfferProduct", Schema = "Sales")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Sales_SpecialOfferProduct
    {

        ///<summary>
        /// Primary key for SpecialOfferProduct records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"SpecialOfferID", Order = 1, TypeName = "int")]
        [Index(@"PK_SpecialOfferProduct_SpecialOfferID_ProductID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Special offer ID")]
        public int SpecialOfferId { get; set; } // SpecialOfferID (Primary key)

        ///<summary>
        /// Product identification number. Foreign key to Product.ProductID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ProductID", Order = 2, TypeName = "int")]
        [Index(@"IX_SpecialOfferProduct_ProductID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"PK_SpecialOfferProduct_SpecialOfferID_ProductID", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 3, TypeName = "uniqueidentifier")]
        [Index(@"AK_SpecialOfferProduct_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 4, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Sales_SalesOrderDetails where [SalesOrderDetail].([ProductID], [SpecialOfferID]) point to this entity (FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Sales_SalesOrderDetail> Sales_SalesOrderDetails { get; set; } // SalesOrderDetail.FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID

        // Foreign keys

        /// <summary>
        /// Parent Production_Product pointed by [SpecialOfferProduct].([ProductId]) (FK_SpecialOfferProduct_Product_ProductID)
        /// </summary>
        [ForeignKey("ProductId"), Required] public virtual Production_Product Production_Product { get; set; } // FK_SpecialOfferProduct_Product_ProductID

        /// <summary>
        /// Parent Sales_SpecialOffer pointed by [SpecialOfferProduct].([SpecialOfferId]) (FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID)
        /// </summary>
        [ForeignKey("SpecialOfferId"), Required] public virtual Sales_SpecialOffer Sales_SpecialOffer { get; set; } // FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID

        public Sales_SpecialOfferProduct()
        {
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Sales_SalesOrderDetails = new System.Collections.Generic.List<Sales_SalesOrderDetail>();
        }
    }

}
// </auto-generated>
