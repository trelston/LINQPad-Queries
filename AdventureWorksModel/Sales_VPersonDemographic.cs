// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.ResourceAccess.Model
{

    // vPersonDemographics
    [Table("vPersonDemographics", Schema = "Sales")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Sales_VPersonDemographic
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"BusinessEntityID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Business entity ID")]
        public int BusinessEntityId { get; set; } // BusinessEntityID (Primary key)

        [Column(@"TotalPurchaseYTD", Order = 2, TypeName = "money")]
        [DataType(DataType.Currency)]
        [Display(Name = "Total purchase ytd")]
        public decimal? TotalPurchaseYtd { get; set; } // TotalPurchaseYTD

        [Column(@"DateFirstPurchase", Order = 3, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Date first purchase")]
        public System.DateTime? DateFirstPurchase { get; set; } // DateFirstPurchase

        [Column(@"BirthDate", Order = 4, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Birth date")]
        public System.DateTime? BirthDate { get; set; } // BirthDate

        [Column(@"MaritalStatus", Order = 5, TypeName = "nvarchar")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Marital status")]
        public string MaritalStatus { get; set; } // MaritalStatus (length: 1)

        [Column(@"YearlyIncome", Order = 6, TypeName = "nvarchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Yearly income")]
        public string YearlyIncome { get; set; } // YearlyIncome (length: 30)

        [Column(@"Gender", Order = 7, TypeName = "nvarchar")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Gender")]
        public string Gender { get; set; } // Gender (length: 1)

        [Column(@"TotalChildren", Order = 8, TypeName = "int")]
        [Display(Name = "Total children")]
        public int? TotalChildren { get; set; } // TotalChildren

        [Column(@"NumberChildrenAtHome", Order = 9, TypeName = "int")]
        [Display(Name = "Number children at home")]
        public int? NumberChildrenAtHome { get; set; } // NumberChildrenAtHome

        [Column(@"Education", Order = 10, TypeName = "nvarchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Education")]
        public string Education { get; set; } // Education (length: 30)

        [Column(@"Occupation", Order = 11, TypeName = "nvarchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Occupation")]
        public string Occupation { get; set; } // Occupation (length: 30)

        [Column(@"HomeOwnerFlag", Order = 12, TypeName = "bit")]
        [Display(Name = "Home owner flag")]
        public bool? HomeOwnerFlag { get; set; } // HomeOwnerFlag

        [Column(@"NumberCarsOwned", Order = 13, TypeName = "int")]
        [Display(Name = "Number cars owned")]
        public int? NumberCarsOwned { get; set; } // NumberCarsOwned
    }

}
// </auto-generated>
